name: Fetch CSV and Generate JSON

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"  # Runs every day at midnight UTC

jobs:
  fetch-csv:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true  # Required to push changes

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install beautifulsoup4 requests

      - name: Run script to fetch CSV and generate JSON
        run: |
          python3 <<EOF
          import requests
          from bs4 import BeautifulSoup
          import csv
          import json
          import os

          CSV_PAGE_URL = "https://mkwlounge.gg/csv/leaderboard_ladder_id_15.csv"
          OUTPUT_JSON_FILE = "player_data.json"

          def fetch_and_process_csv():
              try:
                  response = requests.get(CSV_PAGE_URL)
                  response.raise_for_status()
                  csv_text = response.text
                  reader = csv.reader(csv_text.splitlines())
                  headers = next(reader)
                  player_name_index = headers.index("player_name")
                  player_id_index = headers.index("player_id")

                  players = []
                  for row in reader:
                      if len(row) > max(player_name_index, player_id_index):
                          player_name = row[player_name_index].strip()
                          player_id = row[player_id_index].strip()
                          players.append({"name": player_name, "id": player_id})

                  return players
              except Exception as e:
                  print(f"Error fetching or processing CSV: {e}")
                  return None

          def save_to_json(data, file_path):
              try:
                  with open(file_path, "w") as json_file:
                      json.dump(data, json_file, indent=4)
                  print(f"Data successfully saved to {file_path}")
              except Exception as e:
                  print(f"Error saving JSON: {e}")

          players = fetch_and_process_csv()
          if players:
              save_to_json(players, OUTPUT_JSON_FILE)
          else:
              print("Failed to fetch or process players data.")
          EOF

      - name: Check for changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          if [ -n "$(git status --porcelain)" ]; then
            echo "Changes detected, committing."
            git add player_data.json
            git commit -m "Update player_data.json"
            git push origin HEAD
          else
            echo "No changes detected, skipping commit."
          fi
